{"version":3,"sources":["Login.tsx","Register.tsx","Menu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","margin","top","spacing","root","width","Login","classes","React","useState","checked","setChecked","Grid","container","direction","alignItems","style","minHeight","position","background","left","transform","borderRadius","Typography","variant","component","color","TextField","className","id","label","InputProps","startAdornment","InputAdornment","FormControlLabel","control","Checkbox","onChange","event","target","inputProps","Button","maxWidth","maxHeight","minWidth","Register","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","addButton","createMuiTheme","palette","primary","cyan","secondary","main","contrastText","SimpleTabs","setValue","anchorEl","setAnchorEl","handleClose","ThemeProvider","AppBar","Tabs","newValue","aria-label","Tab","aria-controls","aria-haspopup","onClick","currentTarget","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","open","Boolean","onClose","TransitionComponent","Fade","MenuItem","right","height","visibility","align","src","default","App","CssBaseline","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ggBAkBMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,OAAQ,CACNC,IAAKH,EAAMI,QAAQ,GACnBF,OAAQF,EAAMI,QAAQ,IAExBC,KAAM,CACJ,QAAS,CACPH,OAAQF,EAAMI,QAAQ,GACtBE,MAAO,cAMA,SAASC,IACtB,IAAMC,EAAUV,IADc,EAEAW,IAAMC,UAAS,GAFf,mBAEvBC,EAFuB,KAEdC,EAFc,KAQ9B,OACE,6BACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTV,QAAS,EACTW,UAAU,SACVC,WAAW,SACXC,MAAO,CAAEC,UAAW,OAAQZ,MAAO,MAAOa,SAAU,WAAYC,WAAY,QAC3EC,KAAM,MAAOlB,IAAK,MAAOmB,UAAW,wBACpCC,aAAc,SAEjB,yBAAKN,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACqB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKT,MAAO,CAAEU,MAAO,YAAxD,UAKA,yBAAKV,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACyB,EAAA,EAAD,CACEC,UAAWrB,EAAQH,KACnByB,GAAG,4BACHC,MAAM,WACNN,QAAQ,SACRO,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBf,SAAS,SACvB,kBAAC,IAAD,WAOR,yBAAKF,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACyB,EAAA,EAAD,CACEC,UAAWrB,EAAQH,KACnByB,GAAG,4BACHC,MAAM,WACNN,QAAQ,SACRO,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBf,SAAS,SACvB,kBAAC,IAAD,WAOR,yBAAKF,MAAO,CAACE,SAAU,WAAYhB,IAAK,MAAOkB,KAAM,QACrD,kBAACc,EAAA,EAAD,CACAJ,MAAM,eACNK,QAAS,kBAACC,EAAA,EAAD,CACPpB,MAAO,CAACU,MAAO,WACfhB,QAASA,EACT2B,SA3De,SAACC,GACpB3B,EAAW2B,EAAMC,OAAO7B,UA2DpB8B,WAAY,CAAE,aAAc,yBAI9B,yBAAKxB,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACuC,EAAA,EAAD,CAAQb,UAAWrB,EAAQN,OAC1Be,MAAO,CAAC0B,SAAU,QAASC,UAAW,OACtCC,SAAU,QAAS3B,UAAW,OAC9BE,WAAY,UAAWO,MAAO,UAH/B,Y,uDCvFA7B,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,OAAQ,CACNC,IAAKH,EAAMI,QAAQ,GACnBF,OAAQF,EAAMI,QAAQ,IAExBC,KAAM,CACJ,QAAS,CACPH,OAAQF,EAAMI,QAAQ,GACtBE,MAAO,cAMA,SAASwC,IACtB,IAAMtC,EAAUV,IADiB,EAEHW,IAAMC,UAAS,GAFZ,6BAQjC,OACE,6BACE,kBAACG,EAAA,EAAD,CACEC,WAAS,EACTV,QAAS,EACTW,UAAU,SACVC,WAAW,SACXC,MAAO,CAAEC,UAAW,OAAQZ,MAAO,MAAOa,SAAU,WAAYC,WAAY,QAC3EC,KAAM,MAAOlB,IAAK,MAAOmB,UAAW,wBACpCC,aAAc,SAEjB,yBAAKN,MAAO,CAACE,SAAU,WAAYhB,IAAK,OACxC,kBAACqB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKT,MAAO,CAAEU,MAAO,YAAxD,aAKA,yBAAKV,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACyB,EAAA,EAAD,CACEC,UAAWrB,EAAQH,KACnByB,GAAG,4BACHC,MAAM,YACNN,QAAQ,SACRO,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBf,SAAS,SACvB,kBAAC,IAAD,WAOR,yBAAKF,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACyB,EAAA,EAAD,CACEC,UAAWrB,EAAQH,KACnByB,GAAG,4BACHC,MAAM,gBACNN,QAAQ,SACRO,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBf,SAAS,SACvB,kBAAC,IAAD,WAOR,yBAAKF,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACyB,EAAA,EAAD,CACEC,UAAWrB,EAAQH,KACnByB,GAAG,4BACHC,MAAM,gBACNN,QAAQ,SACRO,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBf,SAAS,SACvB,kBAAC,IAAD,WAOR,yBAAKF,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACyB,EAAA,EAAD,CACEC,UAAWrB,EAAQH,KACnByB,GAAG,4BACHC,MAAM,WACNN,QAAQ,SACRO,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBf,SAAS,SACvB,kBAAC,IAAD,WAOR,yBAAKF,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACyB,EAAA,EAAD,CACEC,UAAWrB,EAAQH,KACnByB,GAAG,4BACHC,MAAM,WACNN,QAAQ,SACRO,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBf,SAAS,SACvB,kBAAC,IAAD,WAOR,yBAAKF,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACyB,EAAA,EAAD,CACEC,UAAWrB,EAAQH,KACnByB,GAAG,4BACHC,MAAM,kBACNN,QAAQ,SACRO,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBf,SAAS,SACvB,kBAAC,IAAD,WAOR,yBAAKF,MAAO,CAACE,SAAU,WAAYhB,IAAK,QACxC,kBAACuC,EAAA,EAAD,CAAQb,UAAWrB,EAAQN,OAC1Be,MAAO,CAAC0B,SAAU,QAASC,UAAW,OACtCC,SAAU,QAAS3B,UAAW,OAC9BE,WAAY,UAAWO,MAAO,UAH/B,e,qBC1HN,SAASoB,EAASC,GAAuB,IAC/BC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EADG,YACOJ,EADP,8BAGtC,OACE,kBAACxB,EAAA,EAAD,eACEE,UAAU,MACV2B,KAAK,WACLC,OAAQJ,IAAUC,EAClBrB,GAAE,0BAAqBqB,GACvBI,kBAAA,qBAA+BJ,IAC3BC,GAEHF,IAAUC,GAAS,kBAACK,EAAA,EAAD,CAAKC,EAAG,GAAIR,IAKtC,SAASS,EAAUP,GACjB,MAAO,CACLrB,GAAG,cAAD,OAAgBqB,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMrD,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCK,KAAM,CACJsD,SAAU,GAEZC,UAAW,CACTjC,MAAO,aAKP3B,EAAQ6D,YAAe,CACzBC,QAAS,CACPC,QAASC,IACTC,UAAW,CACTC,KAAM,UACNC,aAAc,cAKP,SAASC,IACtB,IAAM5D,EAAUV,IADmB,EAETW,IAAMC,SAAS,GAFN,mBAE5BwC,EAF4B,KAErBmB,EAFqB,OAGH5D,IAAMC,SAA6C,MAHhD,mBAG5B4D,EAH4B,KAGlBC,EAHkB,KAa7BC,EAAc,WAClBD,EAAY,OAGd,OACE,kBAACE,EAAA,EAAD,CAAezE,MAAOA,GAClB,yBAAK6B,UAAWrB,EAAQH,MACxB,kBAACqE,EAAA,EAAD,CAAQvD,SAAS,UACb,kBAACwD,EAAA,EAAD,CAAMzB,MAAOA,EAAOZ,SAhBT,SAACC,EAA8BqC,GAClDP,EAASO,IAe2CC,aAAW,sBAAsBlD,MAAM,WAC/E,kBAACmD,EAAA,EAAD,eAAKnD,MAAO,YAAYI,MAAM,WAAc2B,EAAU,KACtD,kBAACoB,EAAA,EAAD,eAAKnD,MAAO,YAAYI,MAAM,WAAc2B,EAAU,KACtD,kBAACoB,EAAA,EAAD,eAAKnD,MAAO,YAAYI,MAAM,SAAY2B,EAAU,KACpD,kBAACoB,EAAA,EAAD,eAAKnD,MAAO,YAAYI,MAAM,YAAe2B,EAAU,KACvD,6BACA,kBAAChB,EAAA,EAAD,CAAQqC,gBAAc,cAAcC,gBAAc,OAAOC,QAlBnD,SAAC1C,GACnBgC,EAAYhC,EAAM2C,gBAkBNjE,MAAO,CAAC0B,SAAU,QAASC,UAAW,OAAQC,SAAU,QAAS3B,UAAW,OAAQS,MAAO,YACvF,kBAAC,IAAD,CAASA,MAAM,cAFnB,UAMA,kBAACwD,EAAA,EAAD,CACIrD,GAAG,YACHwC,SAAUA,EACVc,mBAAoB,KACpBC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,UAChDE,aAAW,EACXC,KAAMC,QAAQrB,GACdsB,QAASpB,EACTqB,oBAAqBC,KAErB,kBAACC,EAAA,EAAD,CAAUd,QAAST,EAAavD,MAC/B,CAAC0B,SAAU,QAASC,UAAW,OAAQC,SAAU,QAAS3B,UAAW,SADtE,eAGA,kBAAC6E,EAAA,EAAD,CAAUd,QAAST,EAAavD,MAC/B,CAAC0B,SAAU,QAASC,UAAW,OAAQC,SAAU,QAAS3B,UAAW,SADtE,kBAGA,kBAAC6E,EAAA,EAAD,CAAUd,QAAST,EAAavD,MAC/B,CAAC0B,SAAU,QAASC,UAAW,OAAQC,SAAU,QAAS3B,UAAW,SADtE,mBAKJ,yBAAKD,MAAO,CAAEE,SAAS,WAAY6E,MAAO,KAAM1F,MAAO,OAAQ2F,OAAQ,SACvE,kBAAC,IAAD,CACEhF,MAAO,CAAEiF,WAAW,UAAW9E,WAAY,UAC1Cd,MAAO,QAAS2F,OAAQ,OAAQE,MAAO,SACxCC,IAAI,gBAKd,kBAACrD,EAAD,CAAUG,MAAOA,EAAOC,MAAO,GAA/B,YAGA,kBAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,GAA/B,yBAGA,kBAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,GAC3B,kBAAC5C,EAAD,OAEJ,kBAACwC,EAAD,CAAUG,MAAOA,EAAOC,MAAO,GAC3B,kBAACL,EAAD,S,+BC5IN9C,GAAQ6D,YAAe,CAC3BC,QAAS,CACP1C,WAAY,CACViF,QAAS,cAKTvG,GAAYC,YAAW,CAC3BM,KAAM,CACJe,WAAY,aAgBDkF,OAZf,WAEE,OADgBxG,KAEd,kBAAC,KAAD,CAAkBE,MAAOA,IACzB,kBAACuG,EAAA,EAAD,MACA,6BACE,kBAACnC,EAAD,SChBcuB,QACW,cAA7Ba,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1d393c5a.chunk.js","sourcesContent":["import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      top: theme.spacing(3),\n      margin: theme.spacing(1),\n    },\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '30ch',\n      },\n    },\n  }),\n);\n\nexport default function Login() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked);\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2}\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ minHeight: '50vh', width: '25%', position: 'absolute', background: 'white',\n         left: '50%', top: '50%', transform: 'translate(-50%, -50%)',\n         borderRadius: '15px' }}\n      >\n      <div style={{position: 'absolute', top: '20%'}}> \n      <Typography variant=\"h3\" component=\"h3\" style={{ color: '#9e9e9e'}}>\n        Login\n      </Typography>\n      </div>\n\n      <div style={{position: 'absolute', top: '40%'}}>\n      <TextField\n        className={classes.root}\n        id=\"input-with-icon-textfield\"\n        label=\"Username\"\n        variant=\"filled\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n      </div>\n\n      <div style={{position: 'absolute', top: '55%'}}>\n      <TextField\n        className={classes.root}\n        id=\"input-with-icon-textfield\"\n        label=\"Password\"\n        variant=\"filled\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <LockIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      </div>\n\n      <div style={{position: 'absolute', top: '70%', left: '20%'}}>\n      <FormControlLabel\n      label='Remember me!'\n      control={<Checkbox\n        style={{color: '#e91e63'}}\n        checked={checked}\n        onChange={handleChange}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />}/>\n      </div>\n\n      <div style={{position: 'absolute', top: '75%'}}>\n      <Button className={classes.margin}\n       style={{maxWidth: '270px', maxHeight: '50px',\n       minWidth: '270px', minHeight: '50px',\n       background: '#e91e63', color: 'white'}}>\n        Login\n      </Button>\n      </div>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      top: theme.spacing(3),\n      margin: theme.spacing(1),\n    },\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '30ch',\n      },\n    },\n  }),\n);\n\nexport default function Register() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked);\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2}\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ minHeight: '70vh', width: '25%', position: 'absolute', background: 'white',\n         left: '50%', top: '50%', transform: 'translate(-50%, -50%)',\n         borderRadius: '15px' }}\n      >\n      <div style={{position: 'absolute', top: '7%'}}> \n      <Typography variant=\"h3\" component=\"h3\" style={{ color: '#9e9e9e'}}>\n        Register\n      </Typography>\n      </div>\n\n      <div style={{position: 'absolute', top: '20%'}}>\n      <TextField\n        className={classes.root}\n        id=\"input-with-icon-textfield\"\n        label=\"Full name\"\n        variant=\"filled\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <PersonIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      </div>\n\n      <div style={{position: 'absolute', top: '30%'}}>\n      <TextField\n        className={classes.root}\n        id=\"input-with-icon-textfield\"\n        label=\"Email address\"\n        variant=\"filled\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <EmailIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      </div>\n\n      <div style={{position: 'absolute', top: '40%'}}>\n      <TextField\n        className={classes.root}\n        id=\"input-with-icon-textfield\"\n        label=\"Mobile number\"\n        variant=\"filled\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <PhoneAndroidIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      </div>\n\n      <div style={{position: 'absolute', top: '50%'}}>\n      <TextField\n        className={classes.root}\n        id=\"input-with-icon-textfield\"\n        label=\"Username\"\n        variant=\"filled\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n      </div>\n\n      <div style={{position: 'absolute', top: '60%'}}>\n      <TextField\n        className={classes.root}\n        id=\"input-with-icon-textfield\"\n        label=\"Password\"\n        variant=\"filled\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <LockIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      </div>\n\n      <div style={{position: 'absolute', top: '70%'}}>\n      <TextField\n        className={classes.root}\n        id=\"input-with-icon-textfield\"\n        label=\"Repeat password\"\n        variant=\"filled\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <LockIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      </div>\n\n      <div style={{position: 'absolute', top: '85%'}}>\n      <Button className={classes.margin}\n       style={{maxWidth: '270px', maxHeight: '50px',\n       minWidth: '270px', minHeight: '50px',\n       background: '#e91e63', color: 'white'}}>\n        Register\n      </Button>\n      </div>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport {Popover} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fade from '@material-ui/core/Fade';\nimport { positions } from '@material-ui/system';\nimport Login from './Login'\nimport Register from './Register'\nimport Image from 'material-ui-image'\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    addButton: {\n      color: \"white\"\n    }\n}));\n  \n\nconst theme = createMuiTheme({\n    palette: {\n      primary: cyan,\n      secondary: {\n        main: '#fafafa',\n        contrastText: '#424242',\n      },\n    },\n});\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement | SVGSVGElement>(null);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n        <AppBar position=\"static\">\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" color=\"primary\">\n                <Tab color= \"secondary\" label=\"Welcome\" {...a11yProps(0)} />\n                <Tab color= \"secondary\" label=\"Gallery\" {...a11yProps(1)} />\n                <Tab color= \"secondary\" label=\"Login\" {...a11yProps(2)} />\n                <Tab color= \"secondary\" label=\"Register\" {...a11yProps(3)} />\n                <div>\n                <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}\n                style={{maxWidth: '160px', maxHeight: '70px', minWidth: '160px', minHeight: '70px', color: '#424242'}}>\n                    <AddIcon color=\"secondary\" />\n                        Events\n                </Button>\n\n                <Menu\n                    id=\"fade-menu\"\n                    anchorEl={anchorEl}\n                    getContentAnchorEl={null}\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n                    transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    TransitionComponent={Fade}\n                >\n                    <MenuItem onClick={handleClose} style=\n                    {{maxWidth: '160px', maxHeight: '70px', minWidth: '160px', minHeight: '70px'}}\n                    >Past Events</MenuItem>\n                    <MenuItem onClick={handleClose} style=\n                    {{maxWidth: '160px', maxHeight: '70px', minWidth: '160px', minHeight: '70px'}}\n                    >Current Events</MenuItem>\n                    <MenuItem onClick={handleClose} style=\n                    {{maxWidth: '160px', maxHeight: '70px', minWidth: '160px', minHeight: '70px'}}\n                    >Future Events</MenuItem>\n                </Menu>\n                </div>\n                <div style={{ position:'absolute', right: '5%', width: '90px', height: '50px' }}>\n                <Image\n                  style={{ visibility:'visible', background: '#00bcd4' ,\n                   width: '170px', height: '50px', align: 'right'}}\n                  src=\"logo.png\"\n                />\n                </div>\n            </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n            Homepage\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n            Photos coming soon...\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n            <Login/>\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n            <Register/>\n        </TabPanel>\n        </div>\n    </ThemeProvider>\n  );\n}","import React from 'react';\nimport './App.css';\nimport SimpleTabs from './Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#424242',\n    }\n  }\n});\n\nconst useStyles = makeStyles({\n  root: {\n    background: '#424242',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <div>\n      <SimpleTabs/>\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}